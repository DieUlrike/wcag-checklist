name: Build desktop apps (Universal mac + Windows)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  ELECTRON_BUILDER_DISABLE_PUBLISH: true  # kein Release-Upload nötig

jobs:
  build-mac-universal:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: npm ci || npm install

      # 1) macOS Intel (x64) bauen
      - name: Build macOS x64
        run: npx electron-builder --mac --x64 --publish=never
      - name: Keep x64 app
        run: |
          mkdir -p dist/tmp-x64
          mv "dist/mac/WCAG Checklist.app" "dist/tmp-x64/"

      # 2) Dist leeren, damit der nächste Build sauber ist
      - name: Clean dist
        run: rm -rf dist/mac dist/*.dmg dist/*-mac.zip

      # 3) macOS Apple Silicon (arm64) bauen
      - name: Build macOS arm64
        run: npx electron-builder --mac --arm64 --publish=never
      - name: Keep arm64 app
        run: |
          mkdir -p dist/tmp-arm64
          mv "dist/mac-arm64/WCAG Checklist.app" "dist/tmp-arm64/"

      # 4) Universal-App zusammenführen (x64 + arm64)
      - name: Merge to Universal app
        run: |
          npx --yes electron-universal \
            --x64 "dist/tmp-x64/WCAG Checklist.app" \
            --arm64 "dist/tmp-arm64/WCAG Checklist.app" \
            --out "dist/WCAG Checklist.app"

      # 5) Universal-App zippen (DMG ist optional; ZIP reicht zum Testen)
      - name: Zip Universal app
        run: |
          ditto -c -k --sequesterRsrc --keepParent \
            "dist/WCAG Checklist.app" \
            "dist/WCAG-Checklist-mac-universal.zip"

      # 6) Artefakt hochladen
      - name: Upload Universal artifact (mac)
        uses: actions/upload-artifact@v4
        with:
          name: wcag-checklist-mac-universal
          path: dist/WCAG-Checklist-mac-universal.zip

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: npm ci || npm install

      - name: Build Windows
        run: npm run dist -- --publish=never

      - name: Upload artifact (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: wcag-checklist-win
          path: |
            dist/*.exe
            dist/*.msi
