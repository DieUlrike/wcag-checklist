name: Build desktop apps (mac x64 + mac arm64 + win)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-mac-arm64:
    runs-on: macos-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci || npm install

      - name: Build macOS (arm64)
        run: npx electron-builder --mac arm64 --publish always

      # WICHTIG: arm64-Feed duplizieren und als latest-mac-arm64.yml hochladen
      - name: Upload latest-mac-arm64.yml
        run: |
          VERSION=$(node -p "require('./package.json').version")
          cp dist/latest-mac.yml dist/latest-mac-arm64.yml
          gh release upload "v$VERSION" "dist/latest-mac-arm64.yml" --clobber

  build-mac-x64:
    needs: build-mac-arm64   # x64 NACH arm64 laufen lassen
    runs-on: macos-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci || npm install

      - name: Build macOS (x64)
        run: npx electron-builder --mac x64 --publish always

  build-windows:
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci || npm install
      - name: Build (Windows)
        run: npm run dist -- --publish always